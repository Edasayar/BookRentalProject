@model List<ListBookHistoryDto>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/AdminLayout/_AdminLayout.cshtml";
    int count = 0;
}

<table class="table table-bordered">
    <tr>
        <th>#</th>
        <th>ISBN No</th>
        <th>Başlık</th>
        <th>Yazar</th>
        <th>Yayın Tarihi</th>
        <th>Durum</th>
        <th>Dönem</th>
        <th>İşlem</th>

    </tr>
    @foreach (var item in Model)
    {
        count++;
        <tr>
            <td>@count</td>
            <td>@item.ISBN</td>
            <td>@item.Title</td>
            <td>@item.Author</td>
            <td>@item.PublicationYear</td>
            @if (item.Status == Status.Mevcut)
            {
                <td><i class="fa fa-circle-o text-success mr-2"></i>@item.Status</td>
            }
            else if (item.Status == Status.ÖdünçAlındı)
            {
                <td><i class="fa fa-circle-o text-warning mr-2"></i>@item.Status</td>
            }
            else if (item.Status == Status.MevcutDeğil)
            {
                <td><i class="fa fa-circle-o text-danger mr-2"></i>@item.Status</td>
            }
            <td>@item.HistoricalPeriod</td>
            @* <td>
                <div class="btn-group mb-1">
                    <button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">İşlem</button>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" href="/BookHistory/DeleteBook/@item.Id">Sil</a> <a class="dropdown-item" href="/BookHistory/UpdateBook/@item.Id">Güncelle</a>

                    </div>
                </div>
            </td> *@


            <td>
                <div class="btn-group mb-1">
                    <button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">İşlem</button>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" href="/Member/BorrowBook?bookId=@item.Id" onclick="borrowBook('@item.Id')">Ödünç Al</a>


                        <a class="dropdown-item" href="#" onclick="returnBook('@item.Id')">İade Et</a>
                    </div>
                </div>
            </td>

        </tr>
    }

</table>
<a href="/BookHistory/AddBookHistory/" class="btn mb-1 btn-rounded btn-outline-warning">Yeni Kitap Ekle </a>

<script>
    function borrowBook(bookId) {
        var data = { bookId: bookId }; // Kitap ID'sini içeren bir JSON nesnesi oluşturun
        fetch('https://localhost:44350/api/MemberApi/borrow/' + bookId, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data) // Kitap ID'sini içeren JSON verisini gönderin
        })
            .then(response => {
                if (response.ok) {
                    console.log('Kitap ödünç alındı.');
                    window.location.reload(); // Sayfayı yenile
                } else {
                    console.error('Kitap ödünç alınamadı.');
                }
            })
            .catch(error => console.error('Hata:', error));
    }



    function returnBook(bookId) {
        fetch('https://localhost:44350/api/BookHistory/return', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ bookId: bookId })
        })
            .then(response => {
                if (response.ok) {
                    console.log('Kitap iade edildi.');
                    window.location.reload(); // Sayfayı yenile
                } else {
                    console.error('Kitap iade edilemedi.');
                }
            })
            .catch(error => console.error('Hata:', error));
    }
</script>

